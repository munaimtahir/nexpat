# Django Settings
# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new one for production, e.g., using python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your_production_secret_key_here
DJANGO_DEBUG=False
DJANGO_ALLOWED_HOSTS=172.235.33.181,your_domain.com,www.your_domain.com,localhost,127.0.0.1

# Database Settings (PostgreSQL)
# Example: postgresql://user:password@host:port/dbname
DATABASE_URL=postgresql://clinicq_user:your_db_password@localhost:5432/clinicq_db

# Django Superuser (optional, will be created by entrypoint.sh if variables are set)
DJANGO_SUPERUSER_USERNAME=admin_user_prod
DJANGO_SUPERUSER_EMAIL=admin_prod@example.com
DJANGO_SUPERUSER_PASSWORD=YourSecurePassword123! # Change this!

# CORS Settings (if your frontend and backend are on different domains/ports in production)
# Example: http://localhost:3000,https://your_frontend_domain.com
# For VPS with specific ports, include the full URL with port
CORS_ALLOWED_ORIGINS=http://172.235.33.181:5173,https://your_frontend_domain.com
CSRF_TRUSTED_ORIGINS=http://172.235.33.181,https://172.235.33.181,https://your_frontend_domain.com

# Email Settings (if your app sends emails)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=

# Other application-specific settings
# API_BASE_URL=https://your_domain.com/api
# STATIC_ROOT=/srv/clinicq/static_collected # Ensure this matches your deployment
# MEDIA_ROOT=/srv/clinicq/media
# STATIC_URL=/static/
# MEDIA_URL=/media/

# Frontend Settings
# For VPS: http://172.235.33.181:8000
# For custom domain: https://api.your_domain.com
VITE_API_BASE_URL=http://172.235.33.181:8000
# The frontend helper appends the /api prefix automatically; avoid including it twice.
